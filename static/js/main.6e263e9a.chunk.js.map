{"version":3,"sources":["logo.svg","core/hamburger-menu.svg","core/close.svg","core/sidebar.js","core/infobar.js","1_landing_page/landing.js","2_flight_info/flight_info.js","4_check_in/check_in.js","5_gate/gate.js","6_in_flight/takeoff.js","8_finish_page/thanks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","props","state","collapsed","this","setState","cName","className","href","style","bottom","src","open","width","onClick","navOpen","close","navCollapse","Component","infostyle","position","background","zIndex","textAlign","padding","height","float","Infobar","fontSize","verticalAlign","marginLeft","departure","flightNumber","Landing","id","logo","FlightInfo","date","boarding","gate","arrival","baggage","Checkin","listStyleType","type","Gate","going","cGoing","cAt","showGoing","showAt","frameBorder","border","allowFullScreen","Takeoff","Thanks","cityname","App","alt","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e263e9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger-menu.d8325303.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.9fd4c592.svg\";","import React, {Component} from \"react\";\r\nimport './sidebar.css'\r\nimport open from './hamburger-menu.svg';\r\nimport close from './close.svg';\r\n\r\nexport default class Sidebar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    navCollapse() {\r\n        this.setState(() => {\r\n            return {collapsed: true};\r\n        });\r\n    }\r\n\r\n    navOpen() {\r\n        this.setState(() => {\r\n           return {collapsed: false};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const cName = this.state.collapsed ? ' collapsed' : '';\r\n\r\n        return(\r\n            <div className={'nav' + cName}>\r\n                <aside>\r\n                    <a href={\"#flight-info\"}>Flight Info</a>\r\n                    <a href={\"#origin-airport\"}>Origin Airport</a>\r\n                    <a href={\"#check-in\"}>Check-In / Security</a>\r\n                    <a href={\"#gate-info\"}>Gate Info</a>\r\n                    <a href={\"#destination-airport\"}>Destination Airport</a>\r\n                    <button style={{bottom: \"0\"}}>Start New</button>\r\n                </aside>\r\n                <span className={'navbutton' + cName}>\r\n                    <img src={open} width={'10%'} onClick={() => this.navOpen()}/>\r\n                    <img src={close} width={'10%'} onClick={() => this.navCollapse()}/>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\n\r\nconst infostyle = {\r\n    position: \"fixed\",\r\n    background: \"gray\",\r\n    zIndex: \"1\",\r\n    textAlign: \"left\",\r\n    padding: \"7px\",\r\n    height: \"5vh\",\r\n    width: \"100%\",\r\n    float: \"left\"\r\n};\r\n\r\nexport default class Infobar extends Component {\r\n\r\n    render() {\r\n        return(\r\n          <div style={infostyle}>\r\n              <span style={{fontSize: '150%', verticalAlign: \"top\", marginLeft: '15%'}}>Depart {this.props.departure}</span>\r\n              <span style={{float: 'right'}}>{this.props.flightNumber}</span>\r\n          </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport './landing.css'\r\nimport logo from '../logo.svg'\r\n\r\nexport default class Landing extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div id={'landing-page'} className={'card'}>\r\n                <img src={logo} className={'App-logo'} />\r\n                <div>\r\n                    Flight Number\r\n                    <br />\r\n                    <input /><button>Search</button>\r\n                </div>\r\n                <p>\r\n                    TERMS OF SERVICE\r\n                    <br />\r\n                    WE NEED YOUR FLIGHT NUMBER AND LOCATION FOR ALL FEATURES TO WORK\r\n                    <br />\r\n                    DO NOT SUE US FOR MISSING YOUR FLIGHT\r\n                    <br />\r\n                    IT'S YOUR FAULT\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport './flight_info.css'\r\n\r\nexport default class FlightInfo extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div id={'flight-info'} className={'card'}>\r\n                <div>{this.props.date}</div>\r\n                <div>Depart: {this.props.departure}</div>\r\n                <div>Board: {this.props.boarding}</div>\r\n                <div>Gate {this.props.gate}</div>\r\n                <div>Arrival: {this.props.arrival}</div>\r\n                <div>Baggage: {this.props.baggage}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport \"./check_in.css\"\r\n\r\nexport default class Checkin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id={'check-in'} className={'card'}>\r\n                <h1>\r\n                    Check-In and Security Checklist\r\n                </h1>\r\n                <ul style={{textAlign: \"left\", listStyleType: \"square\"}}>\r\n                    <input type={\"checkbox\"}/>ID<br/>\r\n                    <ul>\r\n                        <li>\r\n                            Driver's License\r\n                        </li>\r\n                        <li>\r\n                            Passport\r\n                        </li>\r\n                        <li>\r\n                            Federally Issued License\r\n                        </li>\r\n                    </ul>\r\n                    <input type={\"checkbox\"}/>Boarding Pass<br/>\r\n                        <p style={{marginLeft: \"40px\"}}>\r\n                            Boarding passes are obtainable either by accessing a digital copy via your airline's app, using a self checkout qiosk in the terminal or talking to a check-in operator.\r\n                        </p>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport './gate.css'\r\n\r\nexport default class Gate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            going: true\r\n        }\r\n    }\r\n\r\n    showGoing() {\r\n        this.setState(() => {\r\n            return {going: true};\r\n        });\r\n    }\r\n\r\n    showAt() {\r\n        this.setState(() => {\r\n            return {going: false};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const cGoing = this.state.going ? '' : ' hidden';\r\n        const cAt    = this.state.going ? ' hidden' : '';\r\n\r\n        return(\r\n            <div id={'gate-info'} className={'card'}>\r\n                <div>\r\n                    <button onClick={() => this.showGoing()}>Going to Gate</button>\r\n                    <button onClick={() => this.showAt()}>At Gate</button>\r\n                </div>\r\n                <div className={'gate-going' + cGoing}>\r\n                    <iframe frameBorder={\"0\"} style={{ width: \"100vw\", height: \"80vh\", border: \"0\"}}\r\n                    src={\"https://www.google.com/maps/embed/v1/place?q=iah&key=...\"} allowFullScreen/>\r\n                </div>\r\n                <div className={'gate-at' + cAt}>\r\n                    Things to do:\r\n                    <ul>\r\n                        <li>a</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport './takeoff.css'\r\nimport logo from '../logo.svg'\r\n\r\nexport default class Takeoff extends Component {\r\n    //#ff8da1\r\n    render() {\r\n        return(\r\n            <div id={'takeoff'} className={'card'}>\r\n                <img src={logo} className={'App-logo'} />\r\n                <div>\r\n                    <p>\r\n                        ENJOY YOUR\r\n                        <br />\r\n                        FLIGHT\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport './thanks.css'\r\nimport logo from '../logo.svg'\r\n\r\nexport default class Thanks extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div id={'thanks'} className={'card'}>\r\n                <img src={logo} className={'App-logo'} />\r\n                <div>\r\n                    <p>\r\n                        ENJOY YOUR TRIP TO\r\n                        <br />\r\n                        {this.props.cityname}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Sidebar from \"./core/sidebar\";\r\nimport Infobar from \"./core/infobar\";\r\nimport Landing from \"./1_landing_page/landing\";\r\nimport FlightInfo from \"./2_flight_info/flight_info\";\r\nimport Checkin from \"./4_check_in/check_in\"\r\nimport Gate from \"./5_gate/gate\";\r\nimport Takeoff from \"./6_in_flight/takeoff\";\r\nimport Thanks from \"./8_finish_page/thanks\";\r\n\r\n// #ffffff, #fff3f5, #ffdae0, #ffc0cb, #ffa7b6, #ff8da1, #ff748c, #ff5b77\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar />\r\n      <Infobar departure={'10:00am'} flightNumber={\"DL31\"}/>\r\n      <Landing />\r\n      <FlightInfo date={'1/25/2020'} departure={'10:00am'} boarding={'9:30am'} gate={'13B'} arrival={'3:00pm'} baggage={'41'} />\r\n      <Checkin />\r\n      <Gate />\r\n      <Takeoff />\r\n      <Thanks cityname={'Rio de Janeiro'}/>\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}